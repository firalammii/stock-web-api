{"ast":null,"code":"var _jsxFileName = \"/Users/firomsadewano/NodeProjects/react-stock-management-system1/src/employee/Signup.js\",\n    _s = $RefreshSig$();\n\nimport { Button, makeStyles, TextField } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Form } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport Headerforall from \"../headers/Headerforall\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  TextField: {\n    margin: 20\n  },\n  Button: {\n    margin: 30\n  }\n}));\n\nconst Signup = () => {\n  _s();\n\n  const baseUrl = \"http://localhost:8080\";\n  const classes = useStyles();\n  let history = useHistory();\n  const [isSubmitClicked, setIsSubmitClicked] = useState(false);\n  const [companyId, setCompanyId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  useEffect(() => {\n    if (isSubmitClicked === true) {\n      axios.post(\"http://localhost:8080/signup/\", {\n        \"companyId\": companyId,\n        \"password\": password,\n        \"confirmPassword\": confirmPassword\n      }).then(response => {\n        const {\n          data\n        } = response;\n        console.log(data);\n        console.log(response.data);\n        alert(\"you are Registered Successfully ,you are : \" + data.message);\n        history.push(\"/\");\n      }).catch(error => {\n        console.log(error);\n        alert(error);\n      });\n    }\n  }, [companyId, password, confirmPassword]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        type: \"number\",\n        autoFocus: true,\n        className: classes.TextField,\n        label: \"Company Id\",\n        placeholder: \"1\",\n        variant: \"outlined\",\n        value: companyId,\n        onChange: event => {\n          setCompanyId(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"password\",\n        autoFocus: true,\n        className: classes.TextField,\n        label: \"Password\",\n        placeholder: \"MixLike(P@#er50jJ)\",\n        variant: \"outlined\",\n        value: password,\n        onChange: event => {\n          setPassword(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"password\",\n        autoFocus: true,\n        className: classes.TextField,\n        label: \"Confirm Password\",\n        placeholder: \"the same as above)\",\n        variant: \"outlined\",\n        value: confirmPassword,\n        onChange: event => {\n          setConfirmPassword(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.Button,\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => {\n          if (password != confirmPassword) {\n            alert(\"the passwords are different!!\");\n          } else {\n            setIsSubmitClicked(true);\n          }\n        },\n        children: \"set my data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Signup, \"XHBjCb7uNy/DWpWizXuVNMlxCV0=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/firomsadewano/NodeProjects/react-stock-management-system1/src/employee/Signup.js"],"names":["Button","makeStyles","TextField","React","useEffect","useState","axios","Form","useHistory","Headerforall","useStyles","margin","Signup","baseUrl","classes","history","isSubmitClicked","setIsSubmitClicked","companyId","setCompanyId","password","setPassword","confirmPassword","setConfirmPassword","post","then","response","data","console","log","alert","message","push","catch","error","event","target","value"],"mappings":"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","sourcesContent":["import {Button, makeStyles, TextField} from \"@material-ui/core\";\nimport React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {Form} from \"reactstrap\";\nimport {useHistory} from \"react-router-dom\";\nimport Headerforall from \"../headers/Headerforall\";\n\nconst useStyles = makeStyles(()=>({\n    TextField : {\n        margin : 20\n    },\n    Button : {\n        margin : 30\n    }\n}));\n\nconst Signup = ()=>{\n    const baseUrl = \"http://localhost:8080\";\n\n    const classes = useStyles();\n\n    let history = useHistory();\n    const [isSubmitClicked, setIsSubmitClicked] = useState(false);\n\n    const [companyId, setCompanyId] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    useEffect(()=>{\n        if(isSubmitClicked === true){\n\n            axios.post(\"http://localhost:8080/signup/\",\n\n                {\n                    \"companyId\" :companyId,\n                    \"password\" : password,\n                    \"confirmPassword\" : confirmPassword\n                }\n\n            )\n                .then((response) => {\n                    const {data} = response\n                    console.log(data);\n                    console.log(response.data)\n                    alert(\"you are Registered Successfully ,you are : \"+data.message);\n                    history.push(\"/\");\n                })\n                .catch((error) => {\n                    console.log(error);\n                    alert(error);\n                })\n\n\n        }\n\n    },[companyId,password,confirmPassword]);\n\n    return(\n        <>\n            <Form>\n                <TextField\n                    type = {\"number\"}\n                    autoFocus = {true}\n                    className = {classes.TextField}\n                    label = {\"Company Id\"}\n                    placeholder = {\"1\"}\n                    variant = {\"outlined\"}\n                    value = {companyId}\n                    onChange = {(event)=>{\n                        setCompanyId(event.target.value);\n                    }}\n                />\n\n                <TextField\n                    type = {\"password\"}\n                    autoFocus = {true}\n                    className = {classes.TextField}\n                    label = {\"Password\"}\n                    placeholder = {\"MixLike(P@#er50jJ)\"}\n                    variant = {\"outlined\"}\n                    value = {password}\n                    onChange = {(event)=>{\n                        setPassword(event.target.value);\n                    }}\n                />\n\n                <TextField\n                    type = {\"password\"}\n                    autoFocus = {true}\n                    className = {classes.TextField}\n                    label = {\"Confirm Password\"}\n                    placeholder = {\"the same as above)\"}\n                    variant = {\"outlined\"}\n                    value = {confirmPassword}\n                    onChange = {(event)=>{\n                        setConfirmPassword(event.target.value);\n                    }}\n                />\n\n                <Button\n                    className = {classes.Button}\n                    variant = {\"contained\"}\n                    color = {\"primary\"}\n                    onClick = {()=> {\n                        if(password != confirmPassword){\n                            alert(\"the passwords are different!!\");\n                        }\n                        else {\n                            setIsSubmitClicked(true)\n                        }\n                    }}\n                >\n                    set my data\n                </Button>\n\n            </Form>\n        </>\n\n    )\n}\nexport default Signup\n"]},"metadata":{},"sourceType":"module"}