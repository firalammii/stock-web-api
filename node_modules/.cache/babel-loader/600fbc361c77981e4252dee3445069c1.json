{"ast":null,"code":"var _jsxFileName = \"/Users/firomsadewano/NodeProjects/react-stock-management-system1/src/employee/Signup.js\",\n    _s = $RefreshSig$();\n\nimport { Button, makeStyles, TextField } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Form } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport Headerforall from \"../headers/Headerforall\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  TextField: {\n    margin: 20\n  },\n  Button: {\n    margin: 30\n  }\n}));\n\nconst Signup = () => {\n  _s();\n\n  const baseUrl = \"http://localhost:8080\";\n  const classes = useStyles();\n  const [isSubmitClicked, setIsSubmitClicked] = useState(false);\n  const [firstName, setFirstName] = useState(\"\");\n  const [middleName, setMiddleName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  useEffect(() => {\n    if (isSubmitClicked === true) {\n      axios.post(\"http://localhost:8080/signup/\", {\n        \"firstName\": firstName,\n        \"middleName\": middleName,\n        \"lastName\": lastName,\n        \"email\": email,\n        \"phoneNumber\": phoneNumber,\n        \"password\": password,\n        \"confirmPassword\": confirmPassword\n      }).then(response => {\n        const {\n          data\n        } = response;\n        console.log(data);\n        console.log(response.data);\n        alert(\"you are Registered Successfully with info: \" + data.message);\n        useHistory.push(\"/\");\n      }).catch(error => {\n        console.log(error);\n        alert(error);\n      });\n    }\n  }, [firstName, middleName, lastName, email, phoneNumber, password, confirmPassword]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Headerforall, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        type: \"text\",\n        autoFocus: true,\n        className: classes.TextField,\n        label: \"First Name\",\n        placeholder: \"First Name\",\n        variant: \"outlined\",\n        value: firstName,\n        onChange: event => {\n          setFirstName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"text\",\n        autoFocus: true,\n        className: classes.TextField,\n        label: \"Middle Name\",\n        placeholder: \"middle Name\",\n        variant: \"outlined\",\n        value: middleName,\n        onChange: event => {\n          setMiddleName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"text\",\n        autoFocus: true,\n        className: classes.TextField,\n        label: \"Last Name\",\n        placeholder: \"Last Name\",\n        variant: \"outlined\",\n        value: lastName,\n        onChange: event => {\n          setLastName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"email\",\n        autoFocus: true,\n        className: classes.TextField,\n        label: \"Email\",\n        placeholder: \"sth@sth.com\",\n        variant: \"outlined\",\n        value: email,\n        onChange: event => {\n          setEmail(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"tel\",\n        autoFocus: true,\n        className: classes.TextField,\n        label: \"Mobile Phone Number\",\n        placeholder: \"0912345678\",\n        variant: \"outlined\",\n        value: phoneNumber,\n        onChange: event => {\n          setPhoneNumber(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"password\",\n        autoFocus: true,\n        className: classes.TextField,\n        label: \"Password\",\n        placeholder: \"MixLike(P@#er50jJ)\",\n        variant: \"outlined\",\n        value: password,\n        onChange: event => {\n          setPassword(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"password\",\n        autoFocus: true,\n        className: classes.TextField,\n        label: \"Confirm Password\",\n        placeholder: \"the same as above)\",\n        variant: \"outlined\",\n        value: confirmPassword,\n        onChange: event => {\n          setConfirmPassword(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.Button,\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => {\n          if (password != confirmPassword) {\n            alert(\"the passwords are different!!\");\n          } else {\n            setIsSubmitClicked(true);\n          }\n        },\n        children: \"set my data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Signup, \"MNs9cbqCZnJ5BkTE+kCM1u6cAt8=\", false, function () {\n  return [useStyles];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/firomsadewano/NodeProjects/react-stock-management-system1/src/employee/Signup.js"],"names":["Button","makeStyles","TextField","React","useEffect","useState","axios","Form","useHistory","Headerforall","useStyles","margin","Signup","baseUrl","classes","isSubmitClicked","setIsSubmitClicked","firstName","setFirstName","middleName","setMiddleName","lastName","setLastName","email","setEmail","phoneNumber","setPhoneNumber","password","setPassword","confirmPassword","setConfirmPassword","post","then","response","data","console","log","alert","message","push","catch","error","event","target","value"],"mappings":"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","sourcesContent":["import {Button, makeStyles, TextField} from \"@material-ui/core\";\nimport React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {Form} from \"reactstrap\";\nimport {useHistory} from \"react-router-dom\";\nimport Headerforall from \"../headers/Headerforall\";\n\nconst useStyles = makeStyles(()=>({\n    TextField : {\n        margin : 20\n    },\n    Button : {\n        margin : 30\n    }\n}));\n\nconst Signup = ()=>{\n    const baseUrl = \"http://localhost:8080\";\n\n    const classes = useStyles();\n\n    const [isSubmitClicked, setIsSubmitClicked] = useState(false);\n\n    const [firstName, setFirstName] = useState(\"\");\n    const [middleName, setMiddleName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    useEffect(()=>{\n        if(isSubmitClicked === true){\n\n            axios.post(\"http://localhost:8080/signup/\",\n\n                {\n                    \"firstName\" : firstName,\n                    \"middleName\" : middleName,\n                    \"lastName\" : lastName,\n                    \"email\" : email,\n                    \"phoneNumber\" : phoneNumber,\n                    \"password\" : password,\n                    \"confirmPassword\" : confirmPassword\n                }\n\n            )\n                .then((response) => {\n                    const {data} = response\n                    console.log(data);\n                    console.log(response.data)\n                    alert(\"you are Registered Successfully with info: \"+data.message);\n                    useHistory.push(\"/\");\n                })\n                .catch((error) => {\n                    console.log(error);\n                    alert(error);\n                })\n\n\n        }\n\n    },[firstName,middleName,lastName,email,phoneNumber,password,confirmPassword]);\n\n    return(\n        <>\n            <Headerforall/>\n            <Form>\n                <TextField\n                    type = {\"text\"}\n                    autoFocus = {true}\n                    className = {classes.TextField}\n                    label = {\"First Name\"}\n                    placeholder = {\"First Name\"}\n                    variant = {\"outlined\"}\n                    value = {firstName}\n                    onChange = {(event)=>{\n                        setFirstName(event.target.value);\n                    }}\n                />\n\n                <TextField\n                    type = {\"text\"}\n                    autoFocus = {true}\n                    className = {classes.TextField}\n                    label = {\"Middle Name\"}\n                    placeholder = {\"middle Name\"}\n                    variant = {\"outlined\"}\n                    value = {middleName}\n                    onChange = {(event)=>{\n                        setMiddleName(event.target.value);\n                    }}\n                />\n\n                <TextField\n                    type = {\"text\"}\n                    autoFocus = {true}\n                    className = {classes.TextField}\n                    label = {\"Last Name\"}\n                    placeholder = {\"Last Name\"}\n                    variant = {\"outlined\"}\n                    value = {lastName}\n                    onChange = {(event)=>{\n                        setLastName(event.target.value);\n                    }}\n                />\n\n                <TextField\n                    type = {\"email\"}\n                    autoFocus = {true}\n                    className = {classes.TextField}\n                    label = {\"Email\"}\n                    placeholder = {\"sth@sth.com\"}\n                    variant = {\"outlined\"}\n                    value = {email}\n                    onChange = {(event)=>{\n                        setEmail(event.target.value);\n                    }}\n                />\n\n                <TextField\n                    type = {\"tel\"}\n                    autoFocus = {true}\n                    className = {classes.TextField}\n                    label = {\"Mobile Phone Number\"}\n                    placeholder = {\"0912345678\"}\n                    variant = {\"outlined\"}\n                    value = {phoneNumber}\n                    onChange = {(event)=>{\n                        setPhoneNumber(event.target.value);\n                    }}\n                />\n\n                <TextField\n                    type = {\"password\"}\n                    autoFocus = {true}\n                    className = {classes.TextField}\n                    label = {\"Password\"}\n                    placeholder = {\"MixLike(P@#er50jJ)\"}\n                    variant = {\"outlined\"}\n                    value = {password}\n                    onChange = {(event)=>{\n                        setPassword(event.target.value);\n                    }}\n                />\n\n                <TextField\n                    type = {\"password\"}\n                    autoFocus = {true}\n                    className = {classes.TextField}\n                    label = {\"Confirm Password\"}\n                    placeholder = {\"the same as above)\"}\n                    variant = {\"outlined\"}\n                    value = {confirmPassword}\n                    onChange = {(event)=>{\n                        setConfirmPassword(event.target.value);\n                    }}\n                />\n\n                <Button\n                    className = {classes.Button}\n                    variant = {\"contained\"}\n                    color = {\"primary\"}\n                    onClick = {()=> {\n                        if(password != confirmPassword){\n                            alert(\"the passwords are different!!\");\n                        }\n                        else {\n                            setIsSubmitClicked(true)\n                        }\n                    }}\n                >\n                    set my data\n                </Button>\n\n            </Form>\n        </>\n\n    )\n}\nexport default Signup\n"]},"metadata":{},"sourceType":"module"}