{"ast":null,"code":"var _jsxFileName = \"/Users/firomsadewano/NodeProjects/react-stock-management-system1/src/home/Signup.js\",\n    _s = $RefreshSig$();\n\nimport { Button, makeStyles, TextField } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Form } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport HeaderCommon from \"../headers/HeaderCommon\";\nimport useAxios from 'axios-hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  TextField: {\n    margin: 20\n  },\n  Button: {\n    margin: 30\n  },\n  boxBorder: {\n    border: \"gray 5px solid\",\n    marginTop: 10\n  }\n}));\n\nconst Signup = () => {\n  _s();\n\n  const baseUrl = \"http://localhost:8080\";\n  const classes = useStyles();\n  let history = useHistory();\n  const [isSubmitClicked, setIsSubmitClicked] = useState(false);\n  const [companyId, setCompanyId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\"); // const axiosPost = ()=>{\n  //     const [{data, loading,error}, executePost] = useAxios(\n  //         {\n  //             url : 'http://localhost:8080/admin/add',\n  //             method : 'POST',\n  //             data : {\n  //                 \"companyId\" : 7,\n  //                 \"password\" : \"1234\"\n  //             }\n  //         },\n  //\n  //     );\n  // }\n\n  useEffect(() => {\n    if (isSubmitClicked === true) {\n      axios.post(\"http://localhost:8080/admin/signup/\", {\n        \"companyId\": companyId,\n        \"password\": password,\n        \"confirmPassword\": confirmPassword\n      }).then(response => {\n        const {\n          data\n        } = response;\n        console.log(response.data);\n        alert(\"you are Registered Successfully ,you are : \" + data);\n        history.push(\"/\");\n      }).catch(error => {\n        console.log(error);\n        alert(error.error);\n      });\n    }\n  }, [companyId, password, confirmPassword]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderCommon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.boxBorder,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          type: \"number\",\n          autoFocus: true,\n          className: classes.TextField,\n          label: \"Company Id\",\n          placeholder: \"1\",\n          variant: \"outlined\",\n          value: companyId,\n          onChange: event => {\n            setCompanyId(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"password\",\n          autoFocus: true,\n          className: classes.TextField,\n          label: \"Password\",\n          placeholder: \"MixLike(P@#er50jJ)\",\n          variant: \"outlined\",\n          value: password,\n          onChange: event => {\n            setPassword(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"password\",\n          autoFocus: true,\n          className: classes.TextField,\n          label: \"Confirm Password\",\n          placeholder: \"the same as above)\",\n          variant: \"outlined\",\n          value: confirmPassword,\n          onChange: event => {\n            setConfirmPassword(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.Button,\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => {\n            if (password != confirmPassword) {\n              alert(\"the passwords are different!!\");\n            } else {\n              setIsSubmitClicked(true);\n            }\n          },\n          children: \"sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Signup, \"XHBjCb7uNy/DWpWizXuVNMlxCV0=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/firomsadewano/NodeProjects/react-stock-management-system1/src/home/Signup.js"],"names":["Button","makeStyles","TextField","React","useEffect","useState","axios","Form","useHistory","HeaderCommon","useAxios","useStyles","margin","boxBorder","border","marginTop","Signup","baseUrl","classes","history","isSubmitClicked","setIsSubmitClicked","companyId","setCompanyId","password","setPassword","confirmPassword","setConfirmPassword","post","then","response","data","console","log","alert","push","catch","error","event","target","value"],"mappings":"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","sourcesContent":["import {Button, makeStyles, TextField} from \"@material-ui/core\";\nimport React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {Form} from \"reactstrap\";\nimport {useHistory} from \"react-router-dom\";\nimport HeaderCommon from \"../headers/HeaderCommon\";\nimport useAxios from 'axios-hooks'\n\nconst useStyles = makeStyles(()=>({\n    TextField : {\n        margin : 20\n    },\n    Button : {\n        margin : 30\n    },\n    boxBorder :{\n        border : \"gray 5px solid\",\n        marginTop:10\n    },\n}));\n\nconst Signup = ()=>{\n    const baseUrl = \"http://localhost:8080\";\n\n    const classes = useStyles();\n\n    let history = useHistory();\n    const [isSubmitClicked, setIsSubmitClicked] = useState(false);\n\n    const [companyId, setCompanyId] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    // const axiosPost = ()=>{\n    //     const [{data, loading,error}, executePost] = useAxios(\n    //         {\n    //             url : 'http://localhost:8080/admin/add',\n    //             method : 'POST',\n    //             data : {\n    //                 \"companyId\" : 7,\n    //                 \"password\" : \"1234\"\n    //             }\n    //         },\n    //\n    //     );\n    // }\n\n    useEffect(()=>{\n        if(isSubmitClicked === true){\n\n\n\n            axios.post(\"http://localhost:8080/admin/signup/\",\n\n                {\n                    \"companyId\" :companyId,\n                    \"password\" : password,\n                    \"confirmPassword\" : confirmPassword\n                }\n\n            )\n                .then((response) => {\n                    const {data} = response\n                    console.log(response.data)\n                    alert(\"you are Registered Successfully ,you are : \"+data);\n                    history.push(\"/\");\n                })\n                .catch((error) => {\n                    console.log(error);\n                    alert(error.error);\n                })\n\n\n        }\n\n    },[companyId,password,confirmPassword]);\n\n    return(\n        <>\n            <HeaderCommon/>\n            <div className={classes.boxBorder}>\n            <Form>\n                <TextField\n                    type = {\"number\"}\n                    autoFocus = {true}\n                    className = {classes.TextField}\n                    label = {\"Company Id\"}\n                    placeholder = {\"1\"}\n                    variant = {\"outlined\"}\n                    value = {companyId}\n                    onChange = {(event)=>{\n                        setCompanyId(event.target.value);\n                    }}\n                />\n\n                <TextField\n                    type = {\"password\"}\n                    autoFocus = {true}\n                    className = {classes.TextField}\n                    label = {\"Password\"}\n                    placeholder = {\"MixLike(P@#er50jJ)\"}\n                    variant = {\"outlined\"}\n                    value = {password}\n                    onChange = {(event)=>{\n                        setPassword(event.target.value);\n                    }}\n                />\n\n                <TextField\n                    type = {\"password\"}\n                    autoFocus = {true}\n                    className = {classes.TextField}\n                    label = {\"Confirm Password\"}\n                    placeholder = {\"the same as above)\"}\n                    variant = {\"outlined\"}\n                    value = {confirmPassword}\n                    onChange = {(event)=>{\n                        setConfirmPassword(event.target.value);\n                    }}\n                />\n\n                <Button\n                    className = {classes.Button}\n                    variant = {\"contained\"}\n                    color = {\"primary\"}\n                    onClick = {()=> {\n                        if(password != confirmPassword){\n                            alert(\"the passwords are different!!\");\n                        }\n                        else {\n                            setIsSubmitClicked(true)\n                        }\n                    }}\n                >\n                    sign up\n                </Button>\n\n            </Form>\n            </div>\n        </>\n\n    )\n}\nexport default Signup\n"]},"metadata":{},"sourceType":"module"}